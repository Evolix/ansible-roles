---

- name: APT sources
  ansible.builtin.include_tasks: apt_sources.yml
  args:
    apply:
      tags:
        - kibana
        - packages

- name: Kibana is installed
  ansible.builtin.apt:
    name: kibana
    state: present
    update_cache: yes
  tags:
    - kibana
    - packages

- name: kibana server host configuration
  ansible.builtin.lineinfile:
    dest: /etc/kibana/kibana.yml
    line: "server.host: \"{{ kibana_server_host }}\""
    regexp: '^server.host:'
    insertafter: '^#server.host:'
  notify: restart kibana
  tags:
    - kibana

- name: kibana server basepath configuration
  ansible.builtin.lineinfile:
    dest: /etc/kibana/kibana.yml
    line: "server.basePath: \"{{ kibana_server_basepath }}\""
    regexp: '^server.basePath:'
    insertafter: '^#server.basePath:'
  notify: restart kibana
  tags:
    - kibana

- name: kibana log destination is present
  ansible.builtin.file:
    dest: /var/log/kibana
    owner: kibana
    group: kibana
    mode: "0750"
    state: directory
  tags:
    - kibana

- name: kibana log messages go to custom file
  ansible.builtin.lineinfile:
    dest: /etc/kibana/kibana.yml
    line: "logging.dest: \"/var/log/kibana/kibana.log\""
    regexp: '^logging.dest:'
    insertafter: '^#logging.dest:'
  notify: restart kibana
  tags:
    - kibana

- name: Kibana service is enabled and started
  ansible.builtin.systemd:
    name: kibana
    enabled: yes
    state: started
  tags:
    - kibana

- name: Logrotate configuration is enabled
  ansible.builtin.copy:
    src: logrotate
    dest: /etc/logrotate.d/kibana
    mode: "0644"
    owner: root
    group: root
  tags:
    - kibana

# - name: Get mount options for /usr partition
#   shell: "mount | grep 'on /usr type'"
#   register: mount
#   changed_when: False
#   failed_when: False
#   when: not ansible_check_mode
#
# - block:
#   - include_role:
#       name: evolix/remount-usr
#
#   - name: Move kibana optimize directory
#     shell: "mv /usr/share/kibana/{{ item }} /var/lib/kibana/{{ item }} && ln -s /var/lib/kibana/{{ item }} /usr/share/kibana/{{ item }}"
#     args:
#       creates: "/var/lib/kibana/{{ item }}"
#     notify: restart kibana
#     loop:
#       - optimize
#       - data

- ansible.builtin.include: proxy_nginx.yml
  when: kibana_proxy_nginx | bool
  tags:
    - kibana
