#!/bin/bash

: "${AUTOSYSADMIN_LIB:=/usr/local/lib/autosysadmin}"
source "${AUTOSYSADMIN_LIB}/common.sh"  || exit 1
source "${AUTOSYSADMIN_LIB}/restart.sh" || exit 1

# shellcheck disable=SC2034
RUNNING="nwh-fr"

## Possible values for RUNNING :
##   never    => disabled
##   always   => enabled
##   nwh-fr   => enabled during non-working-hours in France
##   nwh-ca   => enabled during non-working-hours in Canada (not supported yet)
##   custom   => enabled if `running_custom()` function returns 0, otherwise disabled.

## The name of the service, mainly for logging
service_name="tomcat"

is_service_alive() {
    ## this must return 0 if the service is alive, otherwise return 1
    /usr/local/lib/nagios/plugins/check_tomcat_instance.sh
    rc=$?
    test $rc -ge 2
}
failed_instances() {
    # Get the multi-instances check result
    # … skip the first line
    # … show only failed instances
    # … and print the instance name only

    /usr/local/lib/nagios/plugins/check_tomcat_instance.sh \
        | tail --lines +2 \
        | grep CRITICAL \
        | awk '{print $3}'
}

## Action for tomcat instance
tomcat_action() {
    instance_name=${1}
    timeout=60
    
    # Save service status before restart
    timeout ${timeout} sudo -i -u "${instance_name}" systemctl status --user tomcat | save_in_log_dir "${service_name}-${instance_name}.before.status"

    # Try to stop
    timeout ${timeout} sudo -i -u "${instance_name}" systemctl stop --user tomcat
    rc=$?
    if [ "${rc}" -eq "0" ]; then
        log_action "Stop ${service_name}-${instance_name}: OK"
    else
        log_action "Stop ${service_name}-${instance_name}: failed."

        sudo -i -u "${instance_name}" systemctl kill --user tomcat
        log_action "Kill ${service_name}-${instance_name}."
        sleep 5
    fi

    # Try to start
    timeout ${timeout} sudo -i -u "${instance_name}" systemctl start --user tomcat
    rc=$?
    if [ "${rc}" -eq "0" ]; then
        log_action "Start ${service_name}-${instance_name}: OK"
    else
        log_action "Start ${service_name}-${instance_name}: failed"
    fi

    # Save service status after restart
    timeout ${timeout} sudo -i -u "${instance_name}" systemctl status --user tomcat | save_in_log_dir "${service_name}-${instance_name}.after.status"
}

# Should we run?
if ! is_supposed_to_run; then
    # log_global "${PROGNAME} is not supposed to run (RUNNING=${RUNNING})."
    exit 0
fi
if is_service_alive; then
    # log_global "${service_name} process alive. Aborting"
    exit 0
fi

# Let's finally do the action
for instance in $(failed_instances);
do
    pre_restart
    tomcat_action "${instance}"
    post_restart
done

