#!/bin/bash

: "${AUTOSYSADMIN_LIB:=/usr/local/lib/autosysadmin}"
source "${AUTOSYSADMIN_LIB}/common.sh"  || exit 1
source "${AUTOSYSADMIN_LIB}/restart.sh" || exit 1

# shellcheck disable=SC2034
RUNNING="nwh-fr"

## Possible values for RUNNING :
##   never    => disabled
##   always   => enabled
##   nwh-fr   => enabled during non-working-hours in France
##   nwh-ca   => enabled during non-working-hours in Canada (not supported yet)
##   custom   => enabled if `running_custom()` function returns 0, otherwise disabled.

## The name of the service, mainly for logging
service_name="tomcat"
## The SysVinit script name
#sysvinit_script="${service_name}"
## The systemd service name
#systemd_service="${service_name}.service"

is_service_alive() {
    ## this must return 0 if the service is alive, otherwise return 1
    critical_instances=$(/usr/local/lib/nagios/plugins/check_tomcat_instance.sh | grep CRITICAL | awk '{print $3}' | grep -v '^[0-9]')
    if [ -n "${critical_instances}" ]; then
        return 1
    else
        return 0
    fi
}

## Action for tomcat instance
tomcat_action() {
    # $1: tomcat instance name
    instance="${1:?}"
    instance_homedir="$(getent passwd "${user}" | cut -d ':' -f 6)"
    # Attempt at a sanety check, at least to make sure that this isn't empty.
    instance_homedir="${instance_homedir:-/srv/tomcat/${instance}}"

    # Save service status before restart
    timeout 40 sudo -u "${instance}" -- "${instance_homedir}/bin/status.sh" | save_in_log_dir "${service_name}.before.status"

    # Try to stop
    timeout 40 sudo -u "${instance}" -- /bin/bash "${instance_homedir}/bin/shutdown.sh"
    rc=$?
    if [ "${rc}" -eq "0" ]; then
        log_action "Stop ${service_name}: OK"
    else
        log_action "Stop ${service_name}: failed"
    fi

    # Try to start
    timeout 40 sudo -u "${instance}" -- /bin/bash "${instance_homedir}/bin/startup.sh"
    rc=$?
    if [ "${rc}" -eq "0" ]; then
        log_action "Start ${service_name}: OK"
    else
        log_action "Start ${service_name}: failed"
    fi

    # Save service status after restart
    timeout 40 sudo -u "${instance}" -- /bin/bash "${instance_homedir}/bin/status.sh" | save_in_log_dir "${service_name}.after.status"
}

# Should we run?
if ! is_supposed_to_run; then
    # log_global "${PROGNAME} is not supposed to run (RUNNING=${RUNNING})."
    exit 0
fi
if is_service_alive; then
    # log_global "${service_name} process alive. Aborting"
    exit 0
fi

# Let's finally do the action
for instance in $( /usr/local/lib/nagios/plugins/check_tomcat_instance.sh | grep CRITICAL | awk '{print $3}' | grep -v '^[0-9]' ) ;
do
    pre_restart
    tomcat_action "${instance}"
    post_restart
done

