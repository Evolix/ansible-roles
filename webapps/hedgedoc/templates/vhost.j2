map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  listen 80;
  listen [::]:80;
  server_name {{ domains |first }};
  
  # For Let's Encrypt
  location /.well-known/acme-challenge/ { allow all; }

  {% if ssl.stat.exists %}
  location / { return 301 https://$host$request_uri; }
  {% endif %}
}

{% if ssl.stat.exists %}
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name {{ domains |first }};

  # For Let's Encrypt
  location /.well-known/acme-challenge/ { allow all; }
  ssl_certificate /etc/letsencrypt/live/{{ domains |first }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ domains |first }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ domains |first }}/chain.pem;

  location / {
      proxy_pass http://127.0.0.1:{{ node_port }};
      proxy_set_header Host $host; 
      proxy_set_header X-Real-IP $remote_addr; 
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
      proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /socket.io/ {
      proxy_pass http://127.0.0.1:{{ node_port }};
      proxy_set_header Host $host; 
      proxy_set_header X-Real-IP $remote_addr; 
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
  } 
}
{% endif %}
