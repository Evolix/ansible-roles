#!/bin/sh

# Copyright (c) 2012, Claudiu Vasadi
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met: 
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution. 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies, 
# either expressed or implied, of the FreeBSD Project.


#
# Script to check the state (master/backup) of a carp internface
# $1 - carp if
# $2 - state
#

. /usr/local/libexec/nagios/utils.sh

# check if $1 and $2 is set
if [ -z "$1" ];then
   echo "carp interface not set. Exiting ..."
   exit "$STATE_CRITICAL"
fi

if [ -z "$2" ];then
   echo "Interface status not set. Exiting ..."
   exit "$STATE_CRITICAL"
fi

# check if the carp interface exists or not
ifconfig $1 > /dev/null
if [ $? != "0" ];then
   echo "carp interface $1 does not exist. Exiting ...."
   exit "$STATE_CRITICAL"
fi

# check state
ifconfig $1 | grep -i $2 > /dev/null
if [ $? != "0" ];then
   echo "NOT_OK - $1 should be $2"
   exit "$STATE_CRITICAL"
else
   echo "OK - $1 is $2"
   exit "$STATE_OK"
fi
