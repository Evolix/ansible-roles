# This role installs the docker daemon
---
- name: Remove older docker packages
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
    state: absent

- name: Install source requirements
  apt:
    name:
      - ca-certificates
      - gnupg2
    state: present

- name: Install apt-transport-https (Debian <10)
  apt:
    name:
      - apt-transport-https
    state: present
  when: ansible_distribution_major_version is version('10', '<')

- name: Add Docker's official GPG key
  copy:
    src: docker-debian.asc
    dest: "{{ apt_keyring_dir }}/docker-debian.asc"
    force: yes
    mode: "0644"
    owner: root
    group: root

- name: Add Docker repository (Debian <12)
  apt_repository:
    repo: 'deb [signed-by={{ apt_keyring_dir }}/docker-debian.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable'
    filename: docker.list
    state: present
  when: ansible_distribution_major_version is version('12', '<')

- name: Add Docker repository (Debian >=12)
  ansible.builtin.template:
    src: docker.sources.j2
    dest: /etc/apt/sources.list.d/docker.sources
    state: present
  when: ansible_distribution_major_version is version('12', '>=')

- name: Install Docker
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    update_cache: yes

- name: python-docker is installed
  apt:
    name: python-docker
    state: present
  when: ansible_python_version is version('3', '<')

- name: python3-docker is installed
  apt:
    name: python3-docker
    state: present
  when: ansible_python_version is version('3', '>=')

- name: Copy Docker daemon configuration file
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: restart docker

- name: Creating Docker tmp directory
  file:
    path: "{{ docker_tmpdir }}"
    state: directory
    mode: "0644"
    owner: root

- name: Creating Docker TLS directory
  file:
    path: "{{ docker_tls_path }}"
    state: directory
    mode: "0644"
    owner: root
  when: docker_tls_enabled | bool

- name: Copy shellpki utility to Docker TLS directory
  template:
    src: "{{ item }}.j2"
    dest: "{{ docker_tls_path }}/{{ item }}"
    mode: "0744"
  loop:
    - shellpki.sh
    - openssl.cnf
  when: docker_tls_enabled | bool

- name: Check if certs are already created
  stat:
    path: "{{ docker_tls_path }}/certs"
  register: tls_certs_stat

- name: Creating a CA, server key
  command: "{{ docker_tls_path }}/shellpki.sh init"
  when:
    - docker_tls_enabled | bool
    - not tls_certs_stat.stat.isdir
