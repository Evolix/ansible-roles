---
- ansible.builtin.debug:
    msg: "Warning: empty 'evolinux_ssh_password_auth_addresses' variable, some configuration elements won't be set!"
  when: evolinux_ssh_password_auth_addresses == []

- name: files under /etc/ssh/sshd_config.d are included
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    line: "Include /etc/ssh/sshd_config.d/*.conf"
    insertbefore: BOF
  notify: reload ssh

- name: Evolinux defaults config is present
  ansible.builtin.template:
    src: sshd/z-evolinux-defaults.conf.j2
    dest: /etc/ssh/sshd_config.d/z-evolinux-defaults.conf
    mode: "0644"
    owner: root
    group: root
    force: yes

- name: Evolinux custom config is present
  ansible.builtin.template:
    src: sshd/zzz-evolinux-custom.conf.j2
    dest: /etc/ssh/sshd_config.d/zzz-evolinux-custom.conf
    mode: "0644"
    owner: root
    group: root
    force: no

# Should we allow the current user?
- name: Allow the current user
  block:
  - name: "Get current user's login"
    ansible.builtin.command:
      cmd: logname
    changed_when: False
    register: _logname
    check_mode: no

  - name: Fetch SSHd config files
    ansible.builtin.command:
      cmd: "find /etc/ssh -type f \\( -name 'sshd_config' -o -path '/etc/ssh/sshd_config.d/*.conf' \\)"
    changed_when: False
    check_mode: no
    register: _ssh_config_paths

  - name: verify AllowUsers directive
    ansible.builtin.command:
      cmd: "grep --extended-regexp --files-with-matches --ignore-case '^AllowUsers' {{ _ssh_config_paths.stdout_lines | join(' ') }}"
    failed_when: False
    changed_when: False
    register: grep_allowusers_ssh
    check_mode: no

  - name: verify AllowGroups directive
    ansible.builtin.command:
      cmd: "grep --extended-regexp --files-with-matches --ignore-case '^AllowGroups' {{ _ssh_config_paths.stdout_lines | join(' ') }}"
    failed_when: False
    changed_when: False
    register: grep_allowgroups_ssh
    check_mode: no

  # If we have AllowUsers but not AllowGroups, append the user to the list
  # (in the first file where we found the directive)

  - name: "Append user to existing AllowUsers sshd directive"
    ansible.builtin.replace:
      dest: "{{ grep_allowusers_ssh.stdout_lines | sort | first }}"
      regexp: '^(AllowUsers ((?!{{ _logname.stdout }}).)*)$'
      replace: '\1 {{ _logname.stdout }}'
      validate: '/usr/sbin/sshd -t -f %s'
    notify: reload sshd
    when:
      - grep_allowusers_ssh.rc == 0
      - grep_allowgroups_ssh.rc != 0

  # If we have AllowGroups but not AllowUsers, add the user to the group and append the group to the list
  # (in the first file where we found the directive)
  
  - name: "evolinux ssh group is present"
    ansible.builtin.group:
      name: "{{ evolinux_ssh_group }}"
    when:
      - grep_allowusers_ssh.rc != 0
      - grep_allowgroups_ssh.rc == 0
  
  - name: "Add current user to evolinux ssh group"
    ansible.builtin.user:
      name: "{{ _logname.stdout }}"
      group: "{{ evolinux_ssh_group }}"
      append: yes
    when:
      - grep_allowusers_ssh.rc != 0
      - grep_allowgroups_ssh.rc == 0

  - name: "Append evolinux ssh group to AllowGroups sshd directive"
    ansible.builtin.replace:
      dest: "{{ grep_allowgroups_ssh.stdout_lines | sort | first }}"
      regexp: '^(AllowGroups ((?!{{ evolinux_ssh_group }}).)*)$'
      replace: '\1 {{ evolinux_ssh_group }}'
      validate: '/usr/sbin/sshd -t -f %s'
    notify: reload sshd
    when:
      - grep_allowusers_ssh.rc != 0
      - grep_allowgroups_ssh.rc == 0

  # If we don't have AllowGroups nor AllowUsers, do nothing

  when: evolinux_ssh_allow_current_user | bool

- ansible.builtin.meta: flush_handlers
